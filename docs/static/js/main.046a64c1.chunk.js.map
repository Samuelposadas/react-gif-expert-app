{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","placeholder","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qLA6BeA,EA1BK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAClB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OAEI,sBAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAQ,IACzBR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAmBO,OACpCN,EAAc,MAOlB,SACI,uBAAOO,KAAK,OAAQC,YAAY,SAASC,MAAOV,EAAWW,SAhBzC,SAACR,GACvBF,EAAcE,EAAES,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDAEyBC,UAAUH,GAFnC,+DAGKI,MAAMF,GAHX,cAGbG,EAHa,gBAIIA,EAAUC,OAJd,uBAIXC,EAJW,EAIXA,KACFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATlB,kBAaZM,GAbY,4CAAH,sDCSLO,EATK,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC3B,OACI,sBAAKc,UAAU,+DAAf,UACI,qBAAKC,IAAOf,EAAKgB,IAAKN,IACtB,4BAAIA,QCkBDO,EAnBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEnB,ECH4B,SAACA,GAEzB,MAA0Bf,mBAAS,CAC/BsB,KAAO,GACPa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAmBA,OAdAC,qBAAU,WAENxB,EAAQC,GAAUwB,MAAK,SAAAC,GAEfH,EAAS,CACLf,KAAOkB,EACPL,SAAU,SAMvB,CAACpB,IAEGqB,EDlBmBK,CAAa1B,GAA/Ba,EAAZ,EAAON,KAAYa,EAAnB,EAAmBA,QAGjB,OACE,qCACE,oBAAIJ,UAAY,wCAAhB,SAAyDhB,IAErDoB,GAAW,mBAAGJ,UAAU,mCAAb,wBACf,qBAAKA,UAAU,YAAf,SACGH,EAAOJ,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEZ1BgB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,gBAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAIA,OACI,qCACI,oBAAIgC,UAAU,QAAd,4BACA,cAAC,EAAD,CAAahC,cAAeA,IAC5B,uBAEA,6BACK4C,EAAWnB,KAAI,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAAyBA,SAAUA,GAApBA,Y,MCZnC6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.046a64c1.chunk.js","sourcesContent":["import {useState} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange = (e)=>{\r\n        setInputValue(e.target.value)\r\n        }\r\n\r\n    const handleSubmit = (e)=>{\r\n        e.preventDefault();\r\n        if(inputValue.trim().length> 2){\r\n            setCategories(cat => [inputValue,...cat]);\r\n            setInputValue(\"\")\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\"  placeholder=\"Search\" value={inputValue}onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddCategory\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n    const url =\r\n      `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=GNqG0tItybcjEiPa5d4zlHAfRIT2iWpR`;\r\n    const respuesta = await fetch(url);\r\n    const { data } = await respuesta.json();\r\n    const gifs = data.map((img) => {\r\n      return {\r\n        id: img.id,\r\n        title: img.title,\r\n        url: img.images.downsized_medium.url,\r\n      };\r\n    });\r\n\r\n    return gifs;\r\n  };","\r\nconst GifGridItem = ({id,title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDown animate__delay-2s\">\r\n            <img src = {url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifGridItem\r\n","import { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport GifGridItem from \"./GifGridItem\"\r\n\r\n\r\nconst GifGrid = ({ category }) => {\r\n\r\nconst {data:images,loading} = useFetchGifs(category);\r\n\r\n  \r\n  return (\r\n    <>\r\n      <h3 className = \"animate__animated animate__fadeInDown\">{category}</h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Loading...</p> }\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => {\r\n          return <GifGridItem key={img.id} {...img} />;\r\n        })}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import {useState , useEffect} from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category)=>{\r\n\r\n    const [state, setState] = useState({\r\n        data : [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(()=>{\r\n\r\n        getGifs(category).then(imgs => {\r\n\r\n                setState({\r\n                    data : imgs,\r\n                    loading : false\r\n                })\r\n\r\n        })\r\n\r\n\r\n    }, [category])\r\n\r\n    return state\r\n}\r\n\r\n","import {useState} from \"react\"\r\nimport AddCategory from \"./components/AddCategory\";\r\nimport  GifGrid from \"./components/GifGrid\";\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState([\"The Simpson\"]);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\">Gif Expert App</h1>\r\n            <AddCategory setCategories={setCategories} />\r\n            <hr />\r\n\r\n            <ol>\r\n                {categories.map(category =>\r\n                    <GifGrid  key={category} category={category}/>\r\n                 )}\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {GifExpertApp} from \"./GifExpertApp\"\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}